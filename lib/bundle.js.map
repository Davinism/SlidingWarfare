{"version":3,"sources":["webpack:///webpack/bootstrap e1966a1dd071c216983f","webpack:///./lib/sliding_warfare.js","webpack:///./lib/game.js","webpack:///./lib/shooter.js","webpack:///./lib/sliding_object.js","webpack:///./lib/util.js","webpack:///./lib/rigid_object.js","webpack:///./lib/bullet.js","webpack:///./lib/wall.js","webpack:///./lib/base.js","webpack:///./lib/terrains/terrain_one.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAC;;;;;;;ACZD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC,qDAAqD;AACvF,mCAAkC,qDAAqD;AACvF,mCAAkC,qDAAqD;AACvF,mCAAkC,6EAA6E;AAC/G,mCAAkC,6EAA6E;AAC/G,mCAAkC,6EAA6E;AAC/G;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA4B,4CAA4C;AACxE,6BAA4B,8CAA8C;;AAE1E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,8BAA8B;AACjD,sBAAqB,qCAAqC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC5HA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;;AAEf,OAAM;AACN,gBAAe;;AAEf,OAAM;AACN,gBAAe;;AAEf,OAAM;AACN,gBAAe;;AAEf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7LA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACjDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;;;;;;ACtHA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e1966a1dd071c216983f\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const canvasEl = document.getElementById(\"sliding-warfare\");\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n\n  const newGame = new GameView(ctx);\n  newGame.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/sliding_warfare.js\n ** module id = 0\n ** module chunks = 0\n **/","const Shooter = require('./shooter');\nconst Wall = require('./wall');\nconst Bullet = require('./bullet');\nconst Base = require('./base');\nconst TerrainOne = require('./terrains/terrain_one');\n\nclass Game {\n  constructor() {\n    this.shooters = [];\n    this.walls = [];\n    this.bullets = [];\n    this.bases = [];\n\n    this.state = {\n      currentPlayer: \"firstPlayer\",\n      firstPlayer: {\n        shooters:[],\n        bases: []\n      },\n      secondPlayer: {\n        shooters:[],\n        bases: []\n      }\n    };\n\n    this.addShooters();\n    this.addWalls();\n    this.addBases();\n  }\n\n  addShooters() {\n    const shooter1 = new Shooter({pos: [100, 300], vel:[0, 0], game: this, rotation: 0});\n    const shooter2 = new Shooter({pos: [150, 200], vel:[0, 0], game: this, rotation: 0});\n    const shooter3 = new Shooter({pos: [150, 400], vel:[0, 0], game: this, rotation: 0});\n    const shooter4 = new Shooter({pos: [900, 300], vel:[0, 0], game: this, color: \"#4891C0\", rotation: Math.PI});\n    const shooter5 = new Shooter({pos: [850, 200], vel:[0, 0], game: this, color: \"#4891C0\", rotation: Math.PI});\n    const shooter6 = new Shooter({pos: [850, 400], vel:[0, 0], game: this, color: \"#4891C0\", rotation: Math.PI});\n    this.shooters.push(shooter1, shooter2, shooter3, shooter4, shooter5, shooter6);\n    this.state.firstPlayer.shooters.push(shooter1, shooter2, shooter3);\n    this.state.secondPlayer.shooters.push(shooter4, shooter5, shooter6);\n  }\n\n  addWalls() {\n    this.walls = TerrainOne(this);\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n  }\n\n  addBases() {\n    const base1 = new Base({pos: [0, 275], color: \"#FF00BF\", game: this});\n    const base2 = new Base({pos: [950, 275], color: \"#4891C0\", game: this});\n\n    this.bases.push(base1, base2);\n    this.state.firstPlayer.bases.push(base1);\n    this.state.secondPlayer.bases.push(base2);\n  }\n\n  allObjects() {\n    return [].concat(this.shooters, this.walls, this.bullets, this.bases);\n  }\n\n  allSlidingObjects() {\n    return [].concat(this.shooters, this.bullets);\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    this.allObjects().forEach( object => object.draw(ctx) );\n  }\n\n  moveObjects(delta) {\n    this.shooters.concat(this.bullets).forEach( (slidingObject) => {\n      slidingObject.move(delta);\n    });\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  remove(object) {\n    if (object instanceof Bullet) {\n      this.bullets.splice(this.bullets.indexOf(object), 1);\n    } else if (object instanceof Shooter) {\n      this.shooters.splice(this.shooters.indexOf(object), 1);\n    }\n  }\n\n  dimX() {\n    return Game.DIM_X;\n  }\n\n  dimY() {\n    return Game.DIM_Y;\n  }\n\n  checkCollisions() {\n    for (let i = 0; i < this.allObjects().length; i++) {\n      for (let j = 0; j < this.allSlidingObjects().length; j++) {\n        let skipIndex = this.allObjects().indexOf(this.allSlidingObjects()[j]);\n\n        if (this.allSlidingObjects()[j].isCollidedWithObject(this.allObjects()[i]) && i !== skipIndex) {\n          this.allSlidingObjects()[j].collideWithObject(this.allObjects()[i]);\n        }\n      }\n    }\n\n  }\n\n  rotate() {\n    const currentShooters = this.state[this.state.currentPlayer].shooters;\n    this.state[this.state.currentPlayer].shooters = currentShooters.slice(1).concat(currentShooters[0]);\n  }\n\n}\n\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.NUM_SHOOTERS = 1;\nGame.NUM_WALLS = 8;\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const SlidingObject = require('./sliding_object');\nconst RigidObject = require('./rigid_object');\nconst Util = require('./util');\nconst Bullet = require('./bullet');\n\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\nclass Shooter extends SlidingObject {\n  constructor(options) {\n    super(Object.assign(defaultOptions, options));\n\n    this.theta = Math.atan(this.vel[0] / this.vel[1]);\n    this.rotation = options.rotation;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n    ctx.moveTo(this.pos[0], this.pos[1]);\n    ctx.lineTo(\n      this.pos[0] + this.radius * Math.cos(this.rotation),\n      this.pos[1] + this.radius * Math.sin(this.rotation)\n    );\n    ctx.stroke();\n\n  }\n\n  fire() {\n    const norm = [Math.cos(this.rotation), Math.sin(this.rotation)];\n\n    if (this.vel[0] === 0 && this.vel[1] === 0) {\n      return null;\n    }\n\n    const bulletVel = [\n      this.vel[0] + Bullet.SPEED * Math.cos(this.rotation),\n      this.vel[1] + Bullet.SPEED * Math.sin(this.rotation)\n    ];\n\n    const bullet = new Bullet({\n      pos: this.pos,\n      vel: bulletVel,\n      game: this.game\n    });\n\n    this.game.addBullet(bullet);\n  }\n\n  power(impulse) {\n    this.vel[0] += impulse[0];\n    this.vel[1] += impulse[1];\n  }\n\n  spin(jolt) {\n    if (this.rotation + jolt > 2 * Math.PI) {\n      this.rotation = this.rotation + jolt - (2 * Math.PI);\n    } else if (this.rotation + jolt < 0) {\n      this.rotation = (2 * Math.PI) + this.rotation + jolt;\n    } else {\n      this.rotation = this.rotation + jolt;\n    }\n  }\n\n  collideWithSlidingObject(slidingObject) {\n    if (slidingObject instanceof Bullet) {\n      this.game.remove(this);\n    } else if (slidingObject instanceof Shooter) {\n      const initialVel = [slidingObject.vel[0], slidingObject.vel[1]];\n      slidingObject.vel = [\n        slidingObject.vel[0] * -1,\n        slidingObject.vel[1] * -1\n      ];\n      window.setTimeout(() => {\n        this.vel = [initialVel[0], initialVel[1]];\n      }, 10);\n    }\n  }\n\n  collideWithObject(object) {\n    if (object instanceof SlidingObject) {\n      this.collideWithSlidingObject(object);\n    } else if (object instanceof RigidObject) {\n      this.collideWithRigidObject(object);\n    }\n  }\n}\n\nShooter.COLOR = \"#FF00BF\";\nShooter.RADIUS = 15;\nShooter.VEL = 10;\n\nconst defaultOptions = {\n  color: Shooter.COLOR,\n  radius: Shooter.RADIUS,\n  vel: Util.randomVec(Shooter.VEL),\n  rotation: 0\n};\n\nmodule.exports = Shooter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/shooter.js\n ** module id = 2\n ** module chunks = 0\n **/","const Util = require('./util');\nconst RigidObject = require('./rigid_object');\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\nconst FRICTIONAL_CONSTANT = 0.02;\n\nclass SlidingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.color = options.color;\n    this.game = options.game;\n    this.vel = options.vel;\n    this.radius = options.radius;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n\n  }\n\n  adjustXVelocity(velComponent) {\n    if (velComponent > 0 && velComponent > FRICTIONAL_CONSTANT * Math.abs(Math.sin(this.theta))) {\n      return velComponent - (FRICTIONAL_CONSTANT * Math.abs(Math.sin(this.theta)));\n    } else if (velComponent < 0 && velComponent < -1 * FRICTIONAL_CONSTANT * Math.abs(Math.sin(this.theta))) {\n      return velComponent + (FRICTIONAL_CONSTANT * Math.abs(Math.sin(this.theta)));\n    } else {\n      return 0;\n    }\n  }\n\n  adjustYVelocity(velComponent) {\n    if (velComponent > 0 && velComponent > FRICTIONAL_CONSTANT * Math.abs(Math.cos(this.theta))) {\n      return velComponent - (FRICTIONAL_CONSTANT * Math.abs(Math.cos(this.theta)));\n    } else if (velComponent < 0 && velComponent < -1 * FRICTIONAL_CONSTANT * Math.abs(Math.cos(this.theta))) {\n      return velComponent + (FRICTIONAL_CONSTANT * Math.abs(Math.cos(this.theta)));\n    } else {\n      return 0;\n    }\n  }\n\n  move(timeDelta) {\n    this.handleBoundaries(this.pos);\n\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.vel[0] * velocityScale;\n    const offsetY = this.vel[1] * velocityScale;\n\n    this.theta = Math.atan(this.vel[0] / this.vel[1]);\n\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n    this.vel = [this.adjustXVelocity(this.vel[0]), this.adjustYVelocity(this.vel[1])];\n  }\n\n  checkOutOfBounds(pos) {\n    if ((pos[0] - this.radius) <= 0 ){\n       return {coord: \"X\", low: true};\n\n     } else if ((pos[0] + this.radius) >= this.game.dimX()){\n       return {coord: \"X\", low: false};\n\n     } else if ((pos[1] - this.radius) <= 0){\n       return {coord: \"Y\", low: true};\n\n     } else if ((pos[1] + this.radius) >= this.game.dimY()) {\n       return {coord: \"Y\", low: false};\n\n     }\n  }\n\n  handleBoundaries(pos) {\n    let outOfBounds = this.checkOutOfBounds(pos);\n\n    if (outOfBounds) {\n      if (outOfBounds.coord === \"X\") {\n        if (outOfBounds.low) {\n          this.vel[0] = this.vel[0] < 0 ? this.vel[0] * -1 : this.vel[0];\n        } else {\n          this.vel[0] = this.vel[0] > 0 ? this.vel[0] * -1 : this.vel[0];\n        }\n      } else if (outOfBounds.coord === \"Y\") {\n        if (outOfBounds.low) {\n          this.vel[1] = this.vel[1] < 0 ? this.vel[1] * -1 : this.vel[1];\n        } else {\n          this.vel[1] = this.vel[1] > 0 ? this.vel[1] * -1 : this.vel[1];\n        }\n      }\n    }\n  }\n\n  isCollidedWithRigidObject(rigidObject) {\n    let half = { x: rigidObject.width / 2, y: rigidObject.height / 2 };\n    let center = {\n      x: this.pos[0] - (rigidObject.pos[0] + half.x),\n      y: this.pos[1] - (rigidObject.pos[1] + half.y)\n    };\n\n    let side = {\n      x: Math.abs(center.x) - half.x,\n      y: Math.abs(center.y) - half.y\n    };\n\n    if (side.x > this.radius || side.y > this.radius) {\n      return false;\n    }\n    if (side.x < 0 || side.y < 0) {\n      return true;\n    }\n\n    return (side.x * side.x + side.y * side.y) < (this.radius * this.radius);\n  }\n\n  collideWithRigidObject(rigidObject) {\n    let half = { x: rigidObject.width / 2, y: rigidObject.height / 2 };\n    let center = {\n      x: this.pos[0] - (rigidObject.pos[0] + half.x),\n      y: this.pos[1] - (rigidObject.pos[1] + half.y)\n    };\n\n    let side = {\n      x: Math.abs(center.x) - half.x,\n      y: Math.abs(center.y) - half.y\n    };\n\n    if (side.x < 0 || side.y < 0) {\n\n      if (Math.abs(side.x) < this.radius && side.y < 0) {\n        this.vel[0] = this.vel[0] * -1;\n        return null;\n      }\n      if (Math.abs(side.y) < this.radius && side.x < 0) {\n        this.vel[1] = this.vel[1] * -1;\n        return null;\n      }\n    }\n\n    let bounce = side.x * side.x + side.y * side.y < this.radius * this.radius;\n\n    if (bounce) {\n\n      // if (Math.abs(this.theta) < Math.PI / 4 + 0.001 && Math.abs(this.theta) > Math.PI / 4 - 0.001) {\n      //   this.vel = [this.vel[0] * -1, this.vel[1] * -1];\n      // } else {\n        // let magnitude = Math.sqrt(Math.pow(this.vel[0], 2) + Math.pow(this.vel[1], 2));\n        // let angle = Math.PI / 2 - Math.abs(this.theta);\n        //\n        // let xSign = 0, ySign = 0;\n        //\n        // if (this.vel[0] < 0) {\n        //   xSign = -1;\n        // } else if (this.vel[0] > 0) {\n        //   xSign = 1;\n        // }\n        //\n        // if (this.vel[1] < 0) {\n        //   ySign = -1;\n        // } else if (this.vel[1] > 0) {\n        //   ySign = 1;\n        // }\n        //\n        // this.vel = [xSign * magnitude * Math.sin(angle), ySign * magnitude * Math.cos(angle)];\n        // this.theta = Math.atan(this.vel[0] / this.vel[1]);\n      // }\n      // let norm = Math.sqrt(side.x * side.x + side.y * side.y);\n      this.vel = [this.vel[0] * -1, this.vel[1] * -1];\n      return null;\n    }\n  }\n\n  isCollidedWithSlidingObject(slidingObject) {\n    const centerDist = Util.dist(this.pos, slidingObject.pos);\n    return centerDist < (this.radius + slidingObject.radius);\n  }\n\n  isCollidedWithObject(object) {\n    if (object instanceof SlidingObject) {\n      return this.isCollidedWithSlidingObject(object);\n    } else if (object instanceof RigidObject) {\n      return this.isCollidedWithRigidObject(object);\n    }\n  }\n\n}\n\nmodule.exports = SlidingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/sliding_object.js\n ** module id = 3\n ** module chunks = 0\n **/","const Util = {\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n\n  randomVec (length) {\n    var deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  dir (vec) {\n    var norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 4\n ** module chunks = 0\n **/","class RigidObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.color = options.color;\n    this.game = options.game;\n    this.height = options.height;\n    this.width = options.width;\n\n    this.draw = this.draw.bind(this);\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.pos[0], this.pos[1], this.width, this.height);\n  }\n}\n\nmodule.exports = RigidObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/rigid_object.js\n ** module id = 5\n ** module chunks = 0\n **/","const SlidingObject = require('./sliding_object');\nconst RigidObject = require('./rigid_object');\nconst Util = require('./util');\nconst Shooter = require('./shooter');\nconst Wall = require('./wall');\nconst Base = require('./base');\n\nclass Bullet extends SlidingObject {\n  constructor(options) {\n    super(Object.assign(defaultOptions, options));\n  }\n\n  collideWithRigidObject(rigidObject) {\n    this.game.remove(this);\n    if (rigidObject instanceof Base) {\n      alert(\"BASE COMPROMISED!\");\n    }\n  }\n\n  collideWithSlidingObject(slidingObject) {\n      this.game.remove(slidingObject);\n  }\n\n  handleBoundaries(pos) {\n    let outOfBounds = this.checkOutOfBounds(pos);\n\n    if (outOfBounds) {\n      this.game.remove(this);\n    }\n  }\n\n  collideWithObject(object) {\n    if (object instanceof SlidingObject) {\n      this.collideWithSlidingObject(object);\n    } else if (object instanceof RigidObject) {\n      this.collideWithRigidObject(object);\n    }\n  }\n}\n\nBullet.COLOR = \"#000\";\nBullet.RADIUS = 5;\nBullet.SPEED = 20;\n\nconst defaultOptions = {\n  color: Bullet.COLOR,\n  radius: Bullet.RADIUS\n};\n\nmodule.exports = Bullet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bullet.js\n ** module id = 6\n ** module chunks = 0\n **/","const RigidObject = require('./rigid_object.js');\n\nclass Wall extends RigidObject {\n  constructor(options) {\n    super(Object.assign(defaultOptions, options));\n  }\n}\n\nWall.COLOR = \"#CCC\";\nWall.HEIGHT = 50;\nWall.WIDTH = 50;\n\nconst defaultOptions = {\n  color: Wall.COLOR,\n  height: Wall.HEIGHT,\n  width: Wall.WIDTH\n};\n\nmodule.exports = Wall;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/wall.js\n ** module id = 7\n ** module chunks = 0\n **/","const RigidObject = require('./rigid_object.js');\n\nclass Base extends RigidObject {\n  constructor(options) {\n    super(Object.assign(defaultOptions, options));\n  }\n}\n\nBase.HEIGHT = 50;\nBase.WIDTH = 50;\n\nconst defaultOptions = {\n  height: Base.HEIGHT,\n  width: Base.WIDTH\n};\n\nmodule.exports = Base;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/base.js\n ** module id = 8\n ** module chunks = 0\n **/","const Wall = require('../wall');\n\nconst TerrainOne = (game) => {\n  return ([\n    new Wall({\n      pos: [425, 275],\n      game: game,\n      width: 150,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [475, 225],\n      game: game,\n      width: 50,\n      height: 150\n    }),\n\n    new Wall({\n      pos: [475, 0],\n      game: game,\n      width: 50,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [475, 550],\n      game: game,\n      width: 50,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [325, 50],\n      game: game,\n      width: 50,\n      height: 150\n    }),\n\n    new Wall({\n      pos: [325, 400],\n      game: game,\n      width: 50,\n      height: 150\n    }),\n\n    new Wall({\n      pos: [625, 50],\n      game: game,\n      width: 50,\n      height: 150\n    }),\n\n    new Wall({\n      pos: [625, 400],\n      game: game,\n      width: 50,\n      height: 150\n    }),\n\n    new Wall({\n      pos: [50, 50],\n      game: game,\n      width: 100,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [50, 500],\n      game: game,\n      width: 100,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [850, 50],\n      game: game,\n      width: 100,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [850, 500],\n      game: game,\n      width: 100,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [0, 225],\n      game: game,\n      width: 100,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [0, 325],\n      game: game,\n      width: 100,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [900, 225],\n      game: game,\n      width: 100,\n      height: 50\n    }),\n\n    new Wall({\n      pos: [900, 325],\n      game: game,\n      width: 100,\n      height: 50\n    })\n  ]);\n};\n\nmodule.exports = TerrainOne;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/terrains/terrain_one.js\n ** module id = 9\n ** module chunks = 0\n **/","const Game = require('./game');\n\nclass GameView {\n  constructor(ctx) {\n    this.game = new Game;\n    this.ctx = ctx;\n\n    // this.shooterIndex = 0;\n    this.currentPlayer = this.game.state.currentPlayer;\n    this.shooter = this.game.state[this.currentPlayer].shooters[0];\n    // this.shooter = this.game.shooters[this.shooterIndex];\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  bindKeyHandlers() {\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => {\n        this.shooter.power(move);\n      });\n    });\n\n    key('e', () => {\n      this.shooter.spin(Math.PI / 12);\n    });\n\n    key('q', () => {\n      this.shooter.spin(-1 * Math.PI / 12);\n    });\n\n    key('r', (shooter) => {\n      // if (this.shooterIndex >= this.game.state[this.currentPlayer].shooters.length - 1) {\n      //   this.shooterIndex = 0;\n      // } else {\n      //   this.shooterIndex += 1;\n      // }\n      this.game.rotate();\n      this.shooter = this.game.state[this.currentPlayer].shooters[0];\n\n      // this.shooter = this.game.state[this.currentPlayer].shooters[this.shooterIndex];\n    });\n\n    key('space', () => {\n      this.shooter.fire();\n      if (this.game.state.currentPlayer === \"firstPlayer\") {\n        this.game.state.currentPlayer = \"secondPlayer\";\n      } else if (this.game.state.currentPlayer === \"secondPlayer\") {\n        this.game.state.currentPlayer = \"firstPlayer\";\n      }\n      this.currentPlayer = this.game.state.currentPlayer;\n\n      this.shooter = this.game.state[this.currentPlayer].shooters[0];\n    });\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.MOVES = {\n  \"w\": [ 0, -1],\n  \"a\": [-1,  0],\n  \"s\": [ 0,  1],\n  \"d\": [ 1,  0],\n  \"up\": [ 0, -1],\n  \"left\": [-1,  0],\n  \"down\": [ 0,  1],\n  \"right\": [ 1,  0]\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}